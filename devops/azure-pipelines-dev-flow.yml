trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  - group: frontend-dev
  - group: configuration-variables

stages:
  - stage: test
    displayName: "Unit Test"
    jobs:
      - job: coverage
        displayName: "Coverage"
        pool:
          demands: npm
        steps:
          - script: "npm ci"
            displayName: "Npm: install"
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: "SonarCloud"
              organization: "equipoinnovaciondigital"
              scannerMode: "CLI"
              configFile: devops/sonar-project.properties
            displayName: "Sonar: Prepare"
          - task: Npm@1
            inputs:
              command: custom
              customCommand: run test:cov
            displayName: "Npm: Unit Test"
          - task: SonarCloudAnalyze@1
            displayName: "Sonar: Analyze"
          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: "300"
            displayName: "Sonar: Publish"
          - task: sonarcloud-buildbreaker@2
            inputs:
              SonarCloud: "SonarCloud"
              organization: "equipoinnovaciondigital"
            displayName: "Sonar: Validation Status Sonar"

  - stage: artifact
    displayName: "Artifact"
    jobs:
      - job: drop
        displayName: "Drop"
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Bash@3
            displayName: "Application: build"
            inputs:
              targetType: "inline"
              script: |
                echo 'Build: nextJs'
                npm ci
                npm run export
          - task: CopyFiles@2
            inputs:
              Contents: "**/deploy/**"
              targetFolder: "$(Build.ArtifactStagingDirectory)"
            displayName: "Artifact: Copy"
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"
            displayName: "Artifact: Publish"
          - task: ContainerBuild@0
            inputs:
              dockerRegistryServiceConnection: "$(dockerRegistryDev)"
              repository: "$(Build.Repository.Name)"
              Dockerfile: "$(System.DefaultWorkingDirectory)/devops/Dockerfile"
              tags: "$(Build.BuildId)"
            displayName: "Registry: image"
